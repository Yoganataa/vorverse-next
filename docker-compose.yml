version: '3.8'

services:
  media-downloader-bot:
    build: .
    container_name: media_downloader_bot
    restart: unless-stopped
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - API_ID=${API_ID}
      - API_HASH=${API_HASH}
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/media_bot
      - LOG_LEVEL=INFO
    volumes:
      - ./downloads:/app/downloads
      - ./logs:/app/logs
      - ./data:/app/data
      - ./.env:/app/.env
    depends_on:
      - postgres
      - redis
    networks:
      - bot-network

  postgres:
    image: postgres:15-alpine
    container_name: media_bot_postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=media_bot
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - bot-network

  redis:
    image: redis:7-alpine
    container_name: media_bot_redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - bot-network

  # Optional: Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: media_bot_prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - bot-network

volumes:
  postgres_data:
  redis_data:
  prometheus_data:

networks:
  bot-network:
    driver: bridge